ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Category))
ggplotly(p44)
#writing
b <- ggplot(d1, aes(Region, Profit, color = Ship))
b <- b + geom_boxplot()
b <- b + ggtitle("Writing scores by Gender Boxplot")
b <- b + xlab("gender") + ylab("writing")
b
#writing
b <- ggplot(d1, aes(Region, Sales, color = Ship))
b <- b + geom_boxplot()
b <- b + ggtitle("Writing scores by Gender Boxplot")
b <- b + xlab("gender") + ylab("writing")
b
#writing
b <- ggplot(d1, aes(Region, City, color = Ship))
b <- b + geom_boxplot()
b <- b + ggtitle("Writing scores by Gender Boxplot")
b <- b + xlab("gender") + ylab("writing")
b
#writing
b <- ggplot(d1, aes(Region, Discount, color = Ship))
b <- b + geom_boxplot()
b <- b + ggtitle("Writing scores by Gender Boxplot")
b <- b + xlab("gender") + ylab("writing")
b
#writing
b <- ggplot(d1, aes(Region, Discount, color = Category))
b <- b + geom_boxplot()
b <- b + ggtitle("Writing scores by Gender Boxplot")
b <- b + xlab("gender") + ylab("writing")
b
pairs(df,col = 'blue')
pairs(d1)
d1 <- SampleSuperstore    #put dataset in varible to facilitate
pairs(d1)
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')])
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')],col='blue')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')],col='red')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')],col='dark green')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')],col=' green')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' blue')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' pink')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' dark green')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' orange')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' blue')
p2 <- ggplot(d1,aes(x=Region))
p2 + geom_bar(fill=Region)
p5 <- ggplot(d1,aes(x=Region))
p5 + geom_bar(aes(fill=Region)) + transition_states(Region) +  #annimation
ease_aes('linear')
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Region))
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Region))
p55 <- p5 + geom_bar(aes(fill=Category))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
ggplotly(p44) # with interactive
#count of category according to ship
p4 <- ggplot(d1,aes(x=Category))
p4 + geom_bar(aes(fill=Ship)) + transition_states(Ship) +  #annimation
ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Ship))
ggplotly(p44) # with interactive
#count of category according to ship
p4 <- ggplot(d1,aes(x=Ship))
p4 + geom_bar(aes(fill=Category)) + transition_states(Category) +  #annimation
ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Category))
ggplotly(p44) # with interactive
#count of category according to ship
p4 <- ggplot(d1,aes(x=Category))
p4 + geom_bar(aes(fill=Ship)) + transition_states(Ship) +  #annimation
ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Shiip))
ggplotly(p44) # with interactive
p44 <- p4 + geom_bar(aes(fill=Ship))
ggplotly(p44) # with interactive
sapply(d1, class)
summary(d1, class)        #summary data
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Category))
ggplotly(p55)
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
#count of category according to ship
p4 <- ggplot(d1,aes(x=Category))
p4 + geom_bar(aes(fill=Ship)) + transition_states(Ship) +    #annimation
ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Ship))
ggplotly(p44)      # with interactive
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' blue')
p6 <- ggplot(d1,aes(x=Sales))
p6+geom_line(aes(fill=Profit))
ggplot(d1, aes(x=Sales, y=Profit)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line()
ggplot(d1, aes(x=Discount, y=Profit)) +
geom_line()
ggplot(d1, aes(x=profit, y=Discount)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Quantity)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Profit)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,col="green")) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,col='green')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,color='green')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,color='red')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,color=red)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,color='red')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales,color='yellow')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales ,color='green')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Sales ,color='red')) +
geom_line()
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line()
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line(color='red')
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line(color='green')
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line(x=Profit, y=Sales, color=' dark green')
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line(color=' dark green')
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line(color='red')
p5 <- ggplot(d1,aes(x=States))
p55 <- p5 + geom_bar(aes(fill=States))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=City))
p55 <- p5 + geom_bar(aes(fill=City))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Ship))
p55 <- p5 + geom_bar(aes(fill=City))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Ship))
p55 <- p5 + geom_bar(aes(fill=count))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=City))
p55 <- p5 + geom_bar()
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar()
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(alignment=T)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat = 'identity')
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat = "identity")
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar()
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="identity")
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + barplot()
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="identity")
p55
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar()
p55
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="identity")
p55
p5 <- ggplot(d1,aes(x=State,y=State))
p55 <- p5 + geom_bar(stat="identity")
p55
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State,y=Category))
p55 <- p5 + geom_bar(stat="identity")
p55
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State,y=))
p55 <- p5 + geom_bar(stat="identity")
p55
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="identity")
p55
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar()
p55
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="count")
p55
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="count")
p55
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat='count')
p55
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="count")
p55
p5 <- ggplot(d1,aes(x=City))
p55 <- p5 + geom_bar(stat="count")
p55
ggplotly(p55)
p5 <- ggplot(d1,aes(x=City))
p55 <- p5 + geom_bar(stat="count")
p55
p5 <- ggplot(d1,aes(x=City))
p55 <- p5 + geom_bar(stat="count")
p55
ggplotly(p55)
p5 <- ggplot(d1,aes(x=State))
p55 <- p5 + geom_bar(stat="count")
p55
ggplotly(p55)
state = df.groupby("State")[["Sales","Profit"]].sum()
library(dplyr)
dff = d1 %>% group_by(Region)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dff)
dff = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dff)
dff_multiple = d1 %>% group_by(Region, Category) %>%
summarise(total_Sales = sum(Sales),
total_Profit = sum(Profit),
.groups = 'drop')
View(dff_multiple)
#count of category according to ship
p4 <- ggplot(d1,aes(x=Category))
p4 + geom_bar(aes(fill=Ship)) + transition_states(Ship) +    #annimation
ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Ship))
ggplotly(p44)      # with interactive
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
dff = d1 %>% group_by(State)  %>%
summarise(total_sales = mean(Sales),
total_profits = mean(Profit),
.groups = 'drop')
View(dff)
dff = d1 %>% group_by(State)  %>%
summarise(mean_sales = mean(Sales),
mean_profits = mean(Profit),
.groups = 'drop')
View(dff)
dff = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dff)
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
dfm = d1 %>% group_by(State)  %>%
summarise(mean_sales = mean(Sales),
mean_profits = mean(Profit),
.groups = 'drop')
View(dfm)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Category))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=State))
ggplotly(p55)
dfs = d1 %>% group_by(City)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segmant))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segment))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Segment))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Categeory))
ggplotly(p55)
p55 <- p5 + geom_bar(aes(fill=Category))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segment))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Segment))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
#category according to sub Category
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
#category according to sub Category
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segment))
ggplotly(p55)
#segmant to sub category
p5 <- ggplot(d1,aes(x=Segment))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
#segmant to sub category
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segment))
ggplotly(p55)
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line(color=' dark green')
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line(color='red')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' blue')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' dark blue')
p5 <- ggplot(dfs,aes(x=State,y=total_profits))
p55 <- p5 + geom_bar(stat="identity")
p55
ggplotly(p55)
p5 <- ggplot(dfs,aes(x=State,y=total_profits))
p55 <- p5 + geom_bar()
p55
p5 <- ggplot(dfs,aes(x=State,y=total_profits))
p55 <- p5 + geom_bar(stat="identity")
p55
ggplotly(p55)
#mean of profits according to states so we can take a decision wisely
p5 <- ggplot(dfm,aes(x=State,y=mean_profits))
p55 <- p5 + geom_bar(stat="identity")
p55
ggplotly(p55)
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
dfm = d1 %>% group_by(State)  %>%
summarise(mean_sales = mean(Sales),
mean_profits = mean(Profit),
.groups = 'drop')
View(dfm)
d1 <- SampleSuperstore    #put dataset in varible to facilitate
summary(d1, class)        #summary data
sapply(d1, class)         #classfiy types of colums
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
dfm = d1 %>% group_by(State)  %>%
summarise(mean_sales = mean(Sales),
mean_profits = mean(Profit),
.groups = 'drop')
library(dplyr)
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
library(ggplot2) #import ggplot2
library(gganimate)#animation
library(gifski)
library(png)
library(dplyr)
library(plotly)    #import interactive
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
dfm = d1 %>% group_by(State)  %>%
summarise(mean_sales = mean(Sales),
mean_profits = mean(Profit),
.groups = 'drop')
View(dfm)
d1 <- SampleSuperstore    #put dataset in varible to facilitate
summary(d1, class)        #summary data
sapply(d1, class)         #classfiy types of colums
#categeory according to region
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
#count of category according to ship
p4 <- ggplot(d1,aes(x=Category))
p4 + geom_bar(aes(fill=Ship)) + transition_states(Ship) +    #annimation
ease_aes('linear')
#category to segmant to
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segment))
ggplotly(p55)
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line(color=' dark green')
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line(color='red')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' dark blue')
#most and least area can make profit
p5 <- ggplot(dfs,aes(x=State,y=total_profits))
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' dark blue')
#most and least area can make profit
p5 <- ggplot(dfs,aes(x=State,y=total_profits))
p55 <- p5 + geom_bar(stat="identity")
p55
ggplotly(p55)
#mean of profits according to states so we can take a decision wisely
p5 <- ggplot(dfm,aes(x=State,y=mean_profits))
p55 <- p5 + geom_bar(stat="identity")
p55
d1 <- SampleSuperstore    #put dataset in varible to facilitate
summary(d1, class)        #summary data
sapply(d1, class)         #classfiy types of colums
#categeory according to region
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Region))
ggplotly(p55)
#count of category according to ship
p4 <- ggplot(d1,aes(x=Category))
p4 + geom_bar(aes(fill=Ship)) + transition_states(Ship) +    #annimation
ease_aes('linear')
p44 <- p4 + geom_bar(aes(fill=Ship))
ggplotly(p44)      # with interactive
#category to segmant to
p5 <- ggplot(d1,aes(x=Sub))
p55 <- p5 + geom_bar(aes(fill=Segment))
ggplotly(p55)
ggplot(d1, aes(x=Profit, y=Sales)) +
geom_line(color=' dark green')
ggplot(d1, aes(x=Profit, y=Discount)) +
geom_line(color='red')
pairs(d1[c('Sales', 'Quantity', 'Discount','Profit')], col=' dark blue')
library(ggplot2) #import ggplot2
library(gganimate)#animation
library(gifski)
library(png)
library(dplyr)
library(plotly)    #import interactive
dfs = d1 %>% group_by(State)  %>%
summarise(total_sales = sum(Sales),
total_profits = sum(Profit),
.groups = 'drop')
View(dfs)
dfm = d1 %>% group_by(State)  %>%
summarise(mean_sales = mean(Sales),
mean_profits = mean(Profit),
.groups = 'drop')
View(dfm)
dff_multiple = d1 %>% group_by(Region, Category) %>%
summarise(total_Sales = sum(Sales),
total_Profit = sum(Profit),
.groups = 'drop')
View(dff_multiple)
p6 <- ggplot(d1,aes(x=Sales))
p6+geom_line(aes(fill=Profit))
p5 <- ggplot(d1,aes(x=Category))
p55 <- p5 + geom_bar(aes(fill=Sub))
ggplotly(p55)
d1 <- SampleSuperstore    #put dataset in varible to facilitate
summary(d1, class)        #summary data
